@model Accommodation_App.Models.Property

@{
    ViewBag.Title = "Add A New Property";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>

</head>
<body>
    <div class="container">

      @using (Html.BeginForm("AddProperty", "Landlord", FormMethod.Post, new { enctype = "multipart/form-data" }))

        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Add New Property</h4>
                <hr />
                @Html.ValidationSummary(true, "submitted failed. Check your details and try again", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control  multi-line", @placeholder = "Enter a description for your property", @cols = 10, @rows = 10  }) 
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                       @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                       @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
 
                        @*     @Html.DropDownList("list",ViewData["list"] as SelectList)    *@ 
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.RentPrice, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.RentPrice, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.AvailableDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.AvailableDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isFurnished, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <div class="checkbox">
                            @Html.ValidationMessageFor(model => model.isFurnished, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.isFurnished)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                   <div class="col-md-5">
                      <input type="file" name="file" />
                   </div>
                </div>
                

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        
    </div>

</body>